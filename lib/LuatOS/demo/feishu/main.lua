
--LuaTools requires two pieces of information, PROJECT and VERSION
PROJECT = "feishudemo"
VERSION = "1.0.0"

--[[
本demo是演示飞书的 "自定义机器人"
]]

--------------------------------------------------------------------------------------
--Webhook and secret should be replaced with the values     of your own robot.
--webhook is the URL assigned to the robot by DingTalk
--Secret is the key automatically generated by selecting "Signature"
--The following message is sent to a test group. It can be turned off at any time and replaced with your own value.
local webhook = "https://open.feishu.cn/open-apis/bot/v2/hook/568bfe5a-eda5-4a79-8348-9d21c572cc3b"
local secret = "XRtUovKq24De3zkNS9VHVf"
--------------------------------------------------------------------------------------

--Feishu's documentation on robots https://open.feishu.cn/document/ukTMukTMukTM/ucTM5YjL3ETO24yNxkjN?lang=zh-CN

--sys library is standard
_G.sys = require("sys")
--[[Special note, using the http library requires the following statements]]
_G.sysplus = require("sysplus")

if wdt then
    wdt.init(3000)
    sys.timerLoopStart(wdt.feed, 1000)
end

--Because this demo is suitable for all devices that can connect to the Internet
--Unify networking functions, add or delete as needed
sys.taskInit(function()
    if http == nil then
        while 1 do
            sys.wait(1000)
            log.info("bsp", "本固件未包含http库, 请查证")
        end
    end
    local device_id = mcu.unique_id():toHex()
    -----------------------------
    --Unified networking functions, which can be deleted by yourself
    ----------------------------
    if wlan and wlan.connect then
        --WiFi networking, ESP32 series all support
        local ssid = "luatos1234"
        local password = "12341234"
        log.info("wifi", ssid, password)
        --TODO Change to automatic network distribution
        --LED = gpio.setup(12, 0, gpio.PULLUP)
        wlan.init()
        wlan.setMode(wlan.STATION) --This is also the mode by default, and you can do it without calling it.
        device_id = wlan.getMac()
        wlan.connect(ssid, password, 1)
    elseif mobile then
        --Air780E/Air600E series
        --mobile.simid(2) -- Automatically switch SIM cards
        --LED = gpio.setup(27, 0, gpio.PULLUP)
        device_id = mobile.imei()
    elseif w5500 then
        --w5500 Ethernet, currently only supported by Air105
        w5500.init(spi.HSPI_0, 24000000, pin.PC14, pin.PC01, pin.PC00)
        w5500.config() --The default is DHCP mode
        w5500.bind(socket.ETH0)
        --LED = gpio.setup(62, 0, gpio.PULLUP)
    elseif mqtt then
        --The adapted mqtt library is also OK
        --No other operations, just give a comment
    else
        --For other bsps that I don’t know, let me give you some hints in a loop.
        while 1 do
            sys.wait(1000)
            log.info("bsp", "本bsp可能未适配网络层, 请查证")
        end
    end
    --By default, it waits until the connection is successful
    log.info("wait IP_READY")
    sys.waitUntil("IP_READY")
    sys.publish("net_ready", device_id)
end)

sys.taskInit(function()
    --Waiting for Internet connection
    local _, device_id = sys.waitUntil("net_ready")
    sys.wait(500)
    socket.sntp() --If it is a network card, sntp is required here, otherwise the time will be wrong.
    sys.waitUntil("NTP_UPDATE", 5000)

    local rheaders = {}
    rheaders["Content-Type"] = "application/json"
    while 1 do
        --LuatOS’s timestamp only takes seconds, and Feishu’s timestamp only takes seconds.
        local timestamp = tostring(os.time())
        --timestamp = "1684673085314"
        local tmp = crypto.hmac_sha256("", timestamp .. "\n" .. secret)
        --log.info("tmp", "hmac_sha256", tmp)
        --log.info("tmp", "base64", tmp:fromHex():toBase64())
        local sign = crypto.hmac_sha256("", timestamp .. "\n" .. secret):fromHex():toBase64()
        log.info("timestamp", timestamp)
        log.info("sign", sign)
        --Note that the parameters here are different from DingTalk. DingTalk has an access_token parameter, but Feishu does not.
        local url = webhook
        log.info("url", url)
        --The json format also needs to be according to Feishu’s
        local data = {msg_type="text"}
        data["timestamp"] = timestamp
        data["sign"] = sign
        --text is the text content to be sent. For other formats, just splice the table according to Feishu’s requirements.
        local text = "我的id是" .. tostring(device_id) .. "," .. (os.date()) .. "," .. rtos.bsp()
        data["content"] = {text=text}
        local rbody = (json.encode(data))
        log.info("feishu", rbody)
        local code,headers, body = http.request("POST", url, rheaders, rbody).wait()
        --Normally, 200 will be returned, {"StatusCode":0,"StatusMessage":"success","code":0,"data":{},"msg":"success"}
        --For other errors, the key is usually wrong, please check carefully.
        log.info("feishu", code, body)
        sys.wait(60000)
    end
end)

--User code ended------------------------------------------------
--It always ends with this sentence
sys.run()
--Do not add any statements after sys.run()!!!!!
