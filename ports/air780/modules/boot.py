import binascii
try:
    os.stat('main.py')
except:
    f=open('main.py', 'w')
    f.write(binascii.a2b_base64(''))
    f.close()
    pass